(self.webpackChunkvuepress_blog=self.webpackChunkvuepress_blog||[]).push([[7411],{2280:(s,n,a)=>{"use strict";a.r(n),a.d(n,{data:()=>e});const e={key:"v-db41ef7a",path:"/pages/node/pm2/",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"pages/node/pm2/README.md",git:{updatedTime:1741701936e3,contributors:[{name:"COOKIES-LGL",email:"1344714332@qq.com",commits:3}]}}},5743:(s,n,a)=>{"use strict";a.r(n),a.d(n,{default:()=>p});const e=(0,a(6252).uE)('<p>Node.js 默认单进程运行，对于 32 位系统最高可以使用 512MB 内存，对于 64 位最高可以使用 1GB 内存。 对于多核 CPU 的计算机来说，这样做效率很低，因为只有一个核在运行，其他核都在闲置，pm2 利用的 node 原生的 cluster 模块可以顺利解决该问题 pm2 是一个带有负载均衡功能的应用进程管理器，可以使 node 服务在后台运行</p><h4 id="安装"><a class="header-anchor" href="#安装">#</a> 安装</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> pm2 -g\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>启动</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pm2 start app.js --name api-service <span class="token comment"># 启动api-service进程 app.js node程序入口文件</span>\npm2 start app.js --watch   <span class="token comment"># 实时监控 app.js 的方式启动，当app.js文件有变动时，pm2会自动reload</span>\npm2 start /website/api-service/ecosystem.config.js <span class="token comment"># 按照ecosystem.config.js文件启动</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>清除日志</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pm2 flush\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>查看进程</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pm2 list\npm2 show <span class="token number">121</span> <span class="token comment"># 或者 pm2 info 0</span>\n<span class="token comment">#查看进程详细信息，121为PM2进程id</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>监控</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pm2 monit\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>停止</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pm2 stop all  <span class="token comment">#停止PM2列表中所有的进程</span>\npm2 stop <span class="token number">121</span>    <span class="token comment">#停止PM2列表中进程为121的进程</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>重载</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pm2 reload all    <span class="token comment">#重载PM2列表中所有的进程</span>\npm2 reload <span class="token number">121</span>     <span class="token comment">#重载PM2列表中进程为121的进程</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>重启</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pm2 restart all     <span class="token comment">#重启PM2列表中所有的进程</span>\npm2 restart <span class="token number">121</span>      <span class="token comment">#重启PM2列表中进程为121的进程</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>删除进程</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pm2 delete <span class="token number">121</span>     <span class="token comment">#删除PM2列表中进程为121的进程</span>\npm2 delete all   <span class="token comment">#删除PM2列表中所有的进程</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>生成脚本</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pm2 ecosystem\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  apps<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      name<span class="token operator">:</span> <span class="token string">&quot;api-service&quot;</span><span class="token punctuation">,</span>\n      script<span class="token operator">:</span> <span class="token string">&quot;app.js&quot;</span><span class="token punctuation">,</span>\n      merge_logs<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      max_restarts<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n      instances<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n      max_memory_restart<span class="token operator">:</span> <span class="token string">&quot;2G&quot;</span><span class="token punctuation">,</span>\n      cwd<span class="token operator">:</span> <span class="token string">&quot;/website/api-service/&quot;</span><span class="token punctuation">,</span>\n      env<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token constant">NODE_ENV</span><span class="token operator">:</span> <span class="token string">&quot;development&quot;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      env_production<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token constant">NODE_ENV</span><span class="token operator">:</span> <span class="token string">&quot;production&quot;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token comment">// apps：json 结构，apps 是一个数组，每一个数组成员就是对应一个 pm2 中运行的应用</span>\n\n<span class="token comment">// name：应用程序的名称</span>\n\n<span class="token comment">// cwd：应用程序所在的目录</span>\n\n<span class="token comment">// script：应用程序的脚本路径</span>\n\n<span class="token comment">// exec_interpreter：应用程序的脚本类型，这里使用的 shell，默认是 nodejs 。</span>\n\n<span class="token comment">// min_uptime：最小运行时间，这里设置的是 60s 即如果应用程序在 60s 内退出，pm2 会认为程序异常退出，此时触发重启 max_restarts 设置数量</span>\n\n<span class="token comment">// max_restarts：设置应用程序异常退出重启的次数，默认15次（从0开始计数）</span>\n\n<span class="token comment">// exec_mode：应用程序启动模式，这里设置的是 cluster_mode（集群），默认是 fork</span>\n\n<span class="token comment">// error_file：自定义应用程序的错误日志文件</span>\n\n<span class="token comment">// out_file：自定义应用程序日志文件</span>\n\n<span class="token comment">// pid_file：自定义应用程序的pid文件</span>\n\n<span class="token comment">// watch：是否启用监控模式，默认是 false ，如果设置成 true，当应用程序变动时，pm2 会自动重载，这里也可以设置你要监控的文件。</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div>',22),p={render:function(s,n){return e}}}}]);