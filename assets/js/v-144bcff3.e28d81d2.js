(self.webpackChunkvuepress_blog=self.webpackChunkvuepress_blog||[]).push([[2820],{3392:(s,e,n)=>{"use strict";n.r(e),n.d(e,{data:()=>t});const t={key:"v-144bcff3",path:"/pages/fe-sre/git/git-modules/",title:"",lang:"zh-CN",frontmatter:{home:!1,sidebar:!1},excerpt:"",headers:[],filePathRelative:"pages/fe-sre/git/git-modules/README.md",git:{updatedTime:1727168301e3,contributors:[{name:"COOKIES-LGL",email:"1344714332@qq.com",commits:2}]}}},7273:(s,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});const t=(0,n(6252).uE)('<p><strong>背景：</strong> 开发过程中，经常会有一些通用的部分希望抽取出来做成一个公共库来提供给别的工程来使用，而公共代码库的版本管理是个麻烦的事情。</p><p><strong>作用：</strong> 允许你将一个 Git 仓库作为另一个 Git 仓库的子目录。 它能让你将另一个仓库克隆到自己的项目中，同时还保持提交的独立。</p><p><strong>使用:</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>​git submodule <span class="token function">add</span> http://XXXcommon.git<span class="token punctuation">(</span>仓库地址<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>会创建.gitmodules 文件。该配置文件保存了项目 URL 与已经拉取的本地目录之间的映射。如果有多个子模块，该文件中就会有多条记录。 要重点注意的是，该文件也像 .gitignore 文件一样受到（通过）版本控制。 它会和该项目的其他部分一同被拉取推送。</p><p><strong>注意：</strong> 当使用 git clone 下来的工程中带有 submodule 时，初始的时候，submodule 的内容并不会自动下载下来的 需要手动执行拉取动作</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> submodule update --init --recursive\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',7),a={render:function(s,e){return t}}}}]);