(self.webpackChunkvuepress_blog=self.webpackChunkvuepress_blog||[]).push([[6483],{5889:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>t});const t={key:"v-7c6419b3",path:"/pages/javascript/coldKnowledge/",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"pages/javascript/coldKnowledge/README.md",git:{updatedTime:1744255858e3,contributors:[{name:"COOKIES-LGL",email:"1344714332@qq.com",commits:1}]}}},4910:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>e});const t=(0,a(6252).uE)('<p><strong>用 defineProperty 方法添加的属性默认不可变</strong></p><p><strong>import、require 引入的基本数据类型是 只读 的: 你不能修改引入的基本数据类型</strong></p><p><strong>import、require 引用数据类型， import 会共享内存地址，require 会拷贝内存地址，现象是，对象共用了。</strong></p><p><strong>ES5 构造函数返回值详解</strong></p><ul><li>当构造函数 ‌ 没有 return 语句 ‌ 或 ‌return 基本类型 ‌（如数字、字符串）时：自动返回新实例对象 ‌（即 this 指向的对象）</li><li>如果构造函数 ‌return 一个对象 ‌（如 {}、new Date()）：覆盖默认返回值 ‌，直接返回该对象。实例与原构造函数脱离关系 ‌（instanceof 检测失效）</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// 返回新对象</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;Alice&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { id: 1 } （不再是 Person 的实例）</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p <span class="token keyword">instanceof</span> <span class="token class-name">Person</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>如果构造函数 ‌return 基本类型 ‌（如 return 123、return &quot;ok&quot;）：忽略返回值 ‌，仍返回默认的 this 对象。</li></ul>',7),e={render:function(n,s){return t}}}}]);