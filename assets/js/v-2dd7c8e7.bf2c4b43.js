(self.webpackChunkvuepress_blog=self.webpackChunkvuepress_blog||[]).push([[1736],{5870:(s,n,a)=>{"use strict";a.r(n),a.d(n,{data:()=>e});const e={key:"v-2dd7c8e7",path:"/pages/typescript/dev-experience/",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:3,title:"多文件同名命名空间合并 ‌",slug:"多文件同名命名空间合并-‌",children:[]},{level:3,title:"declare module",slug:"declare-module",children:[]}],filePathRelative:"pages/typescript/dev-experience/README.md",git:{updatedTime:1742891356e3,contributors:[{name:"COOKIES-LGL",email:"1344714332@qq.com",commits:1}]}}},9005:(s,n,a)=>{"use strict";a.r(n),a.d(n,{default:()=>p});const e=(0,a(6252).uE)('<h3 id="多文件同名命名空间合并-‌"><a class="header-anchor" href="#多文件同名命名空间合并-‌">#</a> 多文件同名命名空间合并 ‌</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// fileA.ts</span>\n<span class="token keyword">export</span> <span class="token keyword">namespace</span> Skill <span class="token punctuation">{</span>\n  <span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">TempNum</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// fileB.ts</span>\n<span class="token keyword">export</span> <span class="token keyword">namespace</span> Skill <span class="token punctuation">{</span>\n  <span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">TSkill</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> t<span class="token operator">:</span> Skill<span class="token punctuation">.</span>TempNum<span class="token punctuation">;</span>  <span class="token comment">// 引用另一文件的命名空间成员</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="declare-module"><a class="header-anchor" href="#declare-module">#</a> declare module</h3><h4 id="声明外部模块类型"><a class="header-anchor" href="#声明外部模块类型">#</a> 声明外部模块类型</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// my-module.d.ts</span>\n<span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">&quot;some-library&quot;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">doSomething</span><span class="token punctuation">(</span>param<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  <span class="token keyword">export</span> <span class="token keyword">const</span> version<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="为现有模块添加新类型"><a class="header-anchor" href="#为现有模块添加新类型">#</a> 为现有模块添加新类型</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// vue.d.ts</span>\n<span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">&quot;vue&quot;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">interface</span> <span class="token class-name">ComponentCustomProperties</span> <span class="token punctuation">{</span>\n    <span class="token function-variable function">$myGlobalMethod</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="非代码文件类型声明"><a class="header-anchor" href="#非代码文件类型声明">#</a> 非代码文件类型声明</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// global.d.ts</span>\n<span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">&quot;*.png&quot;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> src<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n  <span class="token keyword">export</span> <span class="token keyword">default</span> src<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="模块通配符声明"><a class="header-anchor" href="#模块通配符声明">#</a> 模块通配符声明</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">&quot;*/config.json&quot;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> value<span class="token operator">:</span> <span class="token punctuation">{</span> apiUrl<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">export</span> <span class="token keyword">default</span> value<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>若声明文件包含 import/export，需通过 declare global 声明全局类型，否则作用域仅限当前文件 ‌</p></div>',12),p={render:function(s,n){return e}}}}]);