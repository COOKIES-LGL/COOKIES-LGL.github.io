(self.webpackChunkvuepress_blog=self.webpackChunkvuepress_blog||[]).push([[3246],{7581:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>e});const e={key:"v-2c7f54ac",path:"/pages/fe-sre/git/github-actions/",title:"",lang:"zh-CN",frontmatter:{home:!1,sidebar:!1},excerpt:"",headers:[],filePathRelative:"pages/fe-sre/git/github-actions/README.md",git:{updatedTime:1727168301e3,contributors:[{name:"COOKIES-LGL",email:"1344714332@qq.com",commits:2}]}}},5274:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>d});var e=a(6252);const t=(0,e.Uk)("GitHub Actions 是 GitHub 的持续集成服务, 每个 action 就是一个独立脚本. GitHub 做了一个 "),p={href:"https://github.com/marketplace?type=actions",target:"_blank",rel:"noopener noreferrer"},l=(0,e.Uk)("Actions 官方市场"),o=(0,e.Uk)("，可以搜索到他人提交的 actions"),u=(0,e.uE)('<p><strong>_ GitHub Actions 有一些自己的术语 _</strong></p><ul><li>workflow，工作流程：持续集成一次运行的过程，就是一个 workflow。</li><li>job，任务 ：一个 workflow 由一个或多个 jobs 构成，含义是一次持续集成的运行，可以完成多个任务。</li><li>step，步骤：每个 job 由多个 step 构成，一步步完成。</li><li>action，动作：每个 step 可以依次执行一个或多个命令（action）。</li></ul><h4 id="workflow"><a class="header-anchor" href="#workflow">#</a> workflow</h4><p>GitHub Actions 的配置文件叫做 workflow 文件，存放在代码仓库根目录的 .github/workflows 目录下。 workflow 文件采用 YAML 格式，文件名可以任意取，但是后缀名统一为.yml，比如 foo.yml。一个库可以有多个 workflow 文件。 GitHub 只要发现 .github/workflows 目录里面有 .yml 文件，就会自动运行该文件。</p><p>workflow 文件的配置字段非常多 下面是一些基本字段</p><p>1、 <code>name</code> name 字段是 workflow 的名称。GitHub 在存储库的“操作”页面上显示工作流程的名称。如果省略 name，则 GitHub 将其设置为相对于存储库根目录的工作流文件路径。</p>',6),c=(0,e.Uk)("2、 "),r=(0,e.Wm)("code",null,"on",-1),i=(0,e.Uk)(" 必需触发工作流程的 GitHub 事件的名称。您可以提供一个事件 string，array 一个事件，array 一个事件 types 或一个事件配置 map，以安排工作流程或将工作流程的执行限制为特定的文件，标记或分支更改。有关"),b={href:"https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows",target:"_blank",rel:"noopener noreferrer"},k=(0,e.Uk)("可用事件的列表"),m=(0,e.uE)('<p>示例：</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token comment"># Trigger on push</span>\n<span class="token key atrule">on</span><span class="token punctuation">:</span> push\n<span class="token comment"># Trigger the workflow on push or pull request</span>\n<span class="token key atrule">on</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>push<span class="token punctuation">,</span> pull_request<span class="token punctuation">]</span>\n<span class="token comment"># 指定触发事件时，可以限定分支或标签</span>\n<span class="token key atrule">on</span><span class="token punctuation">:</span>\n  <span class="token comment"># Trigger the workflow on push or pull request,</span>\n  <span class="token comment"># but only for the master branch</span>\n  <span class="token key atrule">push</span><span class="token punctuation">:</span>\n    <span class="token key atrule">branches</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> master\n<span class="token comment"># 上面代码指定，只有 master 分支发生 push 事件时，才会触发 workflow</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>3 、 <code>jobs</code> workflow 文件的主体是 jobs 字段，表示要执行的一项或多项任务<br> jobs 字段里面，需要写出每一项任务的 job_id，具体名称自定义。job_id 里面的 name 字段是显示在 GitHub 上任务的说明。</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">jobs</span><span class="token punctuation">:</span>\n  <span class="token key atrule">my_first_job</span><span class="token punctuation">:</span>\n    <span class="token key atrule">name</span><span class="token punctuation">:</span> My first job\n  <span class="token key atrule">my_second_job</span><span class="token punctuation">:</span>\n    <span class="token key atrule">name</span><span class="token punctuation">:</span> My second job\n<span class="token comment">#  上面代码的 jobs 字段包含两项任务，job_id 分别是 my_first_job 和 my_second_job</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>needs</code> 字段指定当前任务的依赖关系，即运行顺序</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">jobs</span><span class="token punctuation">:</span>\n  <span class="token key atrule">job1</span><span class="token punctuation">:</span>\n  <span class="token key atrule">job2</span><span class="token punctuation">:</span>\n    <span class="token key atrule">needs</span><span class="token punctuation">:</span> job1\n  <span class="token key atrule">job3</span><span class="token punctuation">:</span>\n    <span class="token key atrule">needs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>job1<span class="token punctuation">,</span> job2<span class="token punctuation">]</span>\n<span class="token comment"># 上面代码中，job1 必须先于 job2 完成，而 job3 等待 job1 和 job2 的完成才能运行。因此，这个 workflow 的运行顺序依次为：job1、job2、job3</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><code>runs-on</code> 字段指定运行所需要的虚拟机环境</p><ul><li>GitHub 托管的可用虚拟机为</li></ul><table><thead><tr><th>虚拟环境</th><th>YAML 工作流程标签</th></tr></thead><tbody><tr><td>Windows Server 2019</td><td>windows-latest 要么 windows-2019</td></tr><tr><td>Ubuntu 18.04</td><td>ubuntu-latest 要么 ubuntu-18.04</td></tr><tr><td>Ubuntu 16.04</td><td>ubuntu-16.04</td></tr><tr><td>macOS 卡塔利娜 10.15</td><td>macos-latest 要么 macos-10.15</td></tr></tbody></table><p>完整案例</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">name</span><span class="token punctuation">:</span> Greeting from Mona\n<span class="token key atrule">on</span><span class="token punctuation">:</span> push\n<span class="token key atrule">jobs</span><span class="token punctuation">:</span>\n  <span class="token key atrule">my-job</span><span class="token punctuation">:</span>\n    <span class="token key atrule">name</span><span class="token punctuation">:</span> My Job\n    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest\n    <span class="token key atrule">steps</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Print a greeting\n        <span class="token key atrule">env</span><span class="token punctuation">:</span>\n          <span class="token key atrule">MY_VAR</span><span class="token punctuation">:</span> Hi there<span class="token tag">!</span> My name is\n          <span class="token key atrule">FIRST_NAME</span><span class="token punctuation">:</span> Mona\n          <span class="token key atrule">MIDDLE_NAME</span><span class="token punctuation">:</span> The\n          <span class="token key atrule">LAST_NAME</span><span class="token punctuation">:</span> Octocat\n        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">\n          echo $MY_VAR $FIRST_NAME $MIDDLE_NAME $LAST_NAME.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>',11),d={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[(0,e.Wm)("p",null,[t,(0,e.Wm)("a",p,[l,(0,e.Wm)(a)]),o]),u,(0,e.Wm)("p",null,[c,r,i,(0,e.Wm)("a",b,[k,(0,e.Wm)(a)])]),m],64)}}}}]);