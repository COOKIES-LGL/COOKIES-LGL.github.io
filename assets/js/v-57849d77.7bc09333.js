(self.webpackChunkvuepress_blog=self.webpackChunkvuepress_blog||[]).push([[6573],{5021:(e,s,n)=>{"use strict";n.r(s),n.d(s,{data:()=>a});const a={key:"v-57849d77",path:"/pages/blog-daily/electron-vue/",title:"",lang:"zh-CN",frontmatter:{sidebar:"auto"},excerpt:"",headers:[{level:2,title:"初始化 vue3 和 electron13 版本开发桌面应用",slug:"初始化-vue3-和-electron13-版本开发桌面应用",children:[{level:3,title:"创建项目 app",slug:"创建项目-app",children:[]},{level:3,title:"启动项目 app",slug:"启动项目-app",children:[]},{level:3,title:"打包项目 app",slug:"打包项目-app",children:[]}]}],filePathRelative:"pages/blog-daily/electron-vue/README.md",git:{updatedTime:1733294272e3,contributors:[{name:"COOKIES-LGL",email:"1344714332@qq.com",commits:1},{name:"guilin.li",email:"1344714332@qq.com",commits:1}]}}},510:(e,s,n)=>{"use strict";n.r(s),n.d(s,{default:()=>c});var a=n(6252);const l=(0,a.uE)('<h2 id="初始化-vue3-和-electron13-版本开发桌面应用"><a class="header-anchor" href="#初始化-vue3-和-electron13-版本开发桌面应用">#</a> 初始化 vue3 和 electron13 版本开发桌面应用</h2><p>接下来一步一步手动创建 electron10+ 、Vue3+、cli4+的项目。</p><ul><li>electron ：https://www.electronjs.org/</li><li>Vue3： https://cn.vuejs.org/</li><li>Vue-cli :https://cli.vuejs.org/zh/</li></ul><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>使用 cnpm 加速 npm config set registry https://registry.npm.taobao.o npm config set ELECTRON_MIRROR=https://npm.taobao.org/mirrors/electron/</p></div><h3 id="创建项目-app"><a class="header-anchor" href="#创建项目-app">#</a> 创建项目 app</h3><p>1、安装 Vue-cli4+</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> @vue/cli -g\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>2、创建 Vue 项目 直接选择使用 vue3 创建项目</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>vue create electron-vue-app\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>3、先进入项目然后安装 electron<br> 这一步骤很重要，electron-builder 会自动配置 package.json 文件，打包方式和启动方式。 这里我们可以选择需要的 electron 版本。如果想了解 electron-builder，请点这里https://www.electron.build/</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> electron-vue-app\nvue <span class="token function">add</span> electron-builder\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>4、安装依赖</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">install</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="启动项目-app"><a class="header-anchor" href="#启动项目-app">#</a> 启动项目 app</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> run electron:serve\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>编译成功后，就会出现开发环境的 APP 了。</p><h3 id="打包项目-app"><a class="header-anchor" href="#打包项目-app">#</a> 打包项目 app</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> run electron:build\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',18),r=(0,a.Uk)("效果图 项目自带 electron-devtools-installer 调试器 "),c={render:function(e,s){return(0,a.wg)(),(0,a.j4)(a.HY,null,[l,(0,a.Wm)("p",null,[r,(0,a.Wm)("img",{src:e.$withBase("./pages-assets/electron-vue.png")},null,8,["src"])])],64)}}}}]);