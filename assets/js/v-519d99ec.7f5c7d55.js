(self.webpackChunkvuepress_blog=self.webpackChunkvuepress_blog||[]).push([[9452],{4660:(s,n,a)=>{"use strict";a.r(n),a.d(n,{data:()=>e});const e={key:"v-519d99ec",path:"/pages/backend/Mysql/",title:"",lang:"zh-CN",frontmatter:{sideBar:!1},excerpt:"",headers:[{level:2,title:"Mysql 使用笔记",slug:"mysql-使用笔记",children:[{level:3,title:"连接 mysql",slug:"连接-mysql",children:[]},{level:3,title:"数据库 sql 常用语句",slug:"数据库-sql-常用语句",children:[]},{level:3,title:"sql 文件初始化数据库",slug:"sql-文件初始化数据库",children:[]},{level:3,title:"mysqldump",slug:"mysqldump",children:[]}]}],filePathRelative:"pages/backend/Mysql/README.md",git:{updatedTime:1742449639e3,contributors:[{name:"COOKIES-LGL",email:"1344714332@qq.com",commits:3}]}}},869:(s,n,a)=>{"use strict";a.r(n),a.d(n,{default:()=>t});var e=a(6252);const l=(0,e.uE)('<h2 id="mysql-使用笔记"><a class="header-anchor" href="#mysql-使用笔记">#</a> Mysql 使用笔记</h2><h3 id="连接-mysql"><a class="header-anchor" href="#连接-mysql">#</a> 连接 mysql</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>mysql --version // 查看mysql版本\n\nmysql -u root -p\n<span class="token comment"># 输入密码 cookies666</span>\n\n<span class="token function">uname</span> -a 查看mac CPU类型\n\n<span class="token function">sudo</span> mysql.server status\n<span class="token comment"># 查看mysql状态</span>\n\n<span class="token function">sudo</span> mysql.server start\n<span class="token comment"># 启动命令</span>\n\n<span class="token function">sudo</span> mysql.server stop\n<span class="token comment"># 关闭命令</span>\n\n<span class="token comment"># 退出mysql</span>\n<span class="token builtin class-name">exit</span>\nquit\n<span class="token comment"># 退出mysql</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>',3),p={href:"https://blog.csdn.net/m0_70556273/article/details/126490767",target:"_blank",rel:"noopener noreferrer"},c=(0,e.Uk)("Mysql 链接常见错误"),r=(0,e.uE)('<h3 id="数据库-sql-常用语句"><a class="header-anchor" href="#数据库-sql-常用语句">#</a> 数据库 sql 常用语句</h3><p>1、 显示数据库列表</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>show databases<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>缺省有两个数据库：mysql 和 test。 mysql 库存放着 mysql 的系统和用户权限信息，我们改密码和新增用户，实际上就是对这个库进行操作。 2、 显示库中的数据表：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>use mysql<span class="token punctuation">;</span>\nshow tables<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>3、 显示数据表的结构：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>describe 表名<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>4、 建库与删库：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>create database 库名<span class="token punctuation">;</span>\ndrop database 库名<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>5、 建表：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>use 库名<span class="token punctuation">;</span>\ncreate table 表名<span class="token punctuation">(</span>字段列表<span class="token punctuation">)</span><span class="token punctuation">;</span>\ndrop table 表名<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>6、 清空表中记录：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>delete from 表名<span class="token punctuation">;</span>\ntruncate table 表名<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>7、 显示表中的记录：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">select</span> * from 表名<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="sql-文件初始化数据库"><a class="header-anchor" href="#sql-文件初始化数据库">#</a> sql 文件初始化数据库</h3><p>1、确保您有一个 SQL 文件，其中包含您想要创建的表、视图、触发器等的 DDL 语句。 2、登录到数据库服务器。 3、选择或创建一个新的数据库，您将在其中应用 SQL 文件。 4、使用命令行工具或 SQL 客户端应用 SQL 文件中的语句</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># -- 创建新数据库</span>\nCREATE DATABASE myDataBase<span class="token punctuation">;</span>\n\n<span class="token comment"># -- 使用新数据库</span>\nUSE myDataBase<span class="token punctuation">;</span>\n\n<span class="token comment"># -- 执行SQL文件中的语句</span>\nSOURCE path/to/yourFile.sql<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>直接使用命令行</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>mysql -u username -p myDataBase <span class="token operator">&lt;</span> path/to/yourFile.sql\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="mysqldump"><a class="header-anchor" href="#mysqldump">#</a> mysqldump</h3><p>通过灵活的 SQL 脚本生成能力，满足从全库到表级的数据备份需求，结合参数优化可平衡性能与一致性，是 MySQL 日常运维的核心工具 。</p>',22),t={render:function(s,n){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[l,(0,e.Wm)("p",null,[(0,e.Wm)("a",p,[c,(0,e.Wm)(a)])]),r],64)}}}}]);