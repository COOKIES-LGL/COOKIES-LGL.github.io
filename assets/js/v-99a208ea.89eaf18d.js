(self.webpackChunkvuepress_blog=self.webpackChunkvuepress_blog||[]).push([[1384],{1646:(s,n,a)=>{"use strict";a.r(n),a.d(n,{data:()=>e});const e={key:"v-99a208ea",path:"/pages/fe-sre/eslint/",title:"",lang:"zh-CN",frontmatter:{home:!1},excerpt:"",headers:[{level:3,title:"eslint 实用笔记",slug:"eslint-实用笔记",children:[]}],filePathRelative:"pages/fe-sre/eslint/README.md",git:{updatedTime:1743562444e3,contributors:[{name:"COOKIES-LGL",email:"1344714332@qq.com",commits:6}]}}},2252:(s,n,a)=>{"use strict";a.r(n),a.d(n,{default:()=>m});var e=a(6252);const t=(0,e.uE)('<h3 id="eslint-实用笔记"><a class="header-anchor" href="#eslint-实用笔记">#</a> eslint 实用笔记</h3><h4 id="globals-字段值为一个对象-‌-键为全局变量名-‌-值为该变量是否允许被重写"><a class="header-anchor" href="#globals-字段值为一个对象-‌-键为全局变量名-‌-值为该变量是否允许被重写">#</a> globals 字段值为一个对象，‌ 键为全局变量名，‌ 值为该变量是否允许被重写</h4><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n    <span class="token property">&quot;globals&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;jQuery&quot;</span><span class="token operator">:</span> <span class="token string">&quot;readonly&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;Vue&quot;</span><span class="token operator">:</span> <span class="token string">&quot;writable&quot;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;parserOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;sourceType&quot;</span><span class="token operator">:</span> <span class="token string">&quot;module&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 指定源代码的类型，‌&#39;module&#39;表示ES6模块</span>\n        <span class="token property">&quot;ecmaVersion&quot;</span><span class="token operator">:</span> <span class="token number">2017</span><span class="token punctuation">,</span> <span class="token comment">// 配置支持es2017的语法 async await 等</span>\n        <span class="token property">&quot;ecmaFeatures&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token property">&quot;jsx&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 如果使用JSX，‌则设置为true</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h4 id="eslintcache"><a class="header-anchor" href="#eslintcache">#</a> eslintcache</h4><p>运行 ESLint 时加上--cache 参数，会自动生成一个.eslintcache 文件，用于储存上次缓存的结果。</p>',5),p=(0,e.Wm)("li",null,[(0,e.Wm)("a",{href:"./eslint-tslint-prettier"},"eslint-tslint-prettier"),(0,e.Uk)(),(0,e.Wm)("span",{style:{color:"#bbb",float:"right"}},"2021-08-10")],-1),l=(0,e.Wm)("li",null,[(0,e.Wm)("a",{href:"./eslint-plugin-simple-import-sort"},"eslint-plugin-simple-import-sort"),(0,e.Uk)(),(0,e.Wm)("span",{style:{color:"#bbb",float:"right"}},"2021-09-10")],-1),o={href:"https://github.com/eslint/eslint/tree/main/lib/rules",target:"_blank",rel:"noopener noreferrer"},r=(0,e.Uk)("eslint 官方规则"),c={href:"https://eslint.nodejs.cn/docs/latest/rules/prefer-rest-params#google_vignette",target:"_blank",rel:"noopener noreferrer"},i=(0,e.Uk)("eslint 官方规则说明"),u=(0,e.uE)('<h4 id="只对工作区变更的文件进行-eslint"><a class="header-anchor" href="#只对工作区变更的文件进行-eslint">#</a> 只对工作区变更的文件进行 eslint</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> status --porcelain <span class="token operator">|</span> <span class="token function">grep</span> -E <span class="token string">&#39;^ M &#39;</span> <span class="token operator">|</span> <span class="token function">cut</span> -c <span class="token number">3</span>- <span class="token operator">|</span> <span class="token function">xargs</span> npx eslint --fix\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',2),m={render:function(s,n){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[t,(0,e.Wm)("ul",null,[p,l,(0,e.Wm)("li",null,[(0,e.Wm)("a",o,[r,(0,e.Wm)(a)])]),(0,e.Wm)("li",null,[(0,e.Wm)("a",c,[i,(0,e.Wm)(a)])])]),u],64)}}}}]);