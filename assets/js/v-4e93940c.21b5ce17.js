(self.webpackChunkvuepress_blog=self.webpackChunkvuepress_blog||[]).push([[26],{3021:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>t});const t={key:"v-4e93940c",path:"/pages/fe-interview/project-interview/",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:3,title:"前期准备",slug:"前期准备",children:[]},{level:3,title:"面试介绍文案",slug:"面试介绍文案",children:[]},{level:3,title:"项目介绍",slug:"项目介绍",children:[]},{level:3,title:"项目难点",slug:"项目难点",children:[]},{level:3,title:"jscodeshift",slug:"jscodeshift",children:[]},{level:3,title:"polyfill-service",slug:"polyfill-service",children:[]},{level:3,title:"简历知识点汇总",slug:"简历知识点汇总",children:[]},{level:3,title:"常见性能指标获取",slug:"常见性能指标获取",children:[]}],filePathRelative:"pages/fe-interview/project-interview/README.md",git:{updatedTime:1745673668e3,contributors:[{name:"COOKIES-LGL",email:"1344714332@qq.com",commits:10}]}}},3455:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>p});const t=(0,a(6252).uE)('<h3 id="前期准备"><a class="header-anchor" href="#前期准备">#</a> 前期准备</h3><ul><li>八股文、</li><li>算法、</li><li>常见 coding、</li><li>项目总结、</li><li>前端新技术拓展。</li></ul><h3 id="面试介绍文案"><a class="header-anchor" href="#面试介绍文案">#</a> 面试介绍文案</h3><p>面试官你好，我叫李贵霖，20 年毕业于江南大学计算机科学与技术专业，然后校招进入 SHOPEE seller 部门担任前端开发工程师， 主要负责卖家教育、卖家入驻、卖家保证金健康度管理、等业务的开发工作。22 年来到拼多多，在拼多多先后待了两个业务组，一个是 特木 的基础电商业务组 一个是 特木 跨境结算。在基础电商部门的时候参与了用户增长达人邀约项目搭建，特木 App 内部新人转化活动页全额返和一折购的开发工作。 在跨境结算部门负责一个微服务项目内的人力结算业务的业务开发，涉及人力成本、仓作业计费管理等，也有涉及卖家履约服务，等卖家管理。</p><h3 id="项目介绍"><a class="header-anchor" href="#项目介绍">#</a> 项目介绍</h3><p><strong>达人邀约项目</strong>项目涉及 H5 端和 PC 端，前端部署了两份服务端渲染的代码，通过在网关处拦截用户的 userAgent 来判断访问 PC 端还是 H5 端。</p><p><strong>PAP</strong> 此项目是页面性能数据上报分析平台，包含 SDK、SDK-BE、PAP、PAP-BE、四部分，BE 使用 Koa 框架，使用 kafka 缓冲层应对突发流量，数据存储、分析使用了 Elastic Search，图表展示使用了 Echart。平台对宿主项目的资源加载、页面渲染、自定义埋点等耗时进行统计分析。以及基于 Node-schedule 任务调度器，提供了告警服务和邮件日志。</p><p><strong>SEH</strong> 卖家教育平台，用于对入驻卖家进行以视频，文章形式的教育。同时支持移动端展示，对 SEO、国际化和首页渲染有较高要求。站点支持十几个国家，内容由管理后台配置，管理后台支持富文本和多语言配置，视频内容编辑大文件支持断点续传。</p><p><strong>插件应用市场</strong> 支持公司级部署私有的 vscode 插件市场，方便内部插件的安装、更新管理。使用 pnpm workspace 管理项目，插件开发完成后打包成 vsix 文件上传到 github，然后核心插件程序通过 node 将插件 vsix 文件拉取到本地，然后通过 vscode 指令动态安装扩展程序。</p><p><strong>jscodeshift-cli</strong> 基于 jscodeshift 通过 AST(抽象语法树)实现代码的批量转换，支持代码风格统一。比如批量增加 try catch、规范 React 组件、移除冗余代码等。</p><h3 id="项目难点"><a class="header-anchor" href="#项目难点">#</a> 项目难点</h3><p>首页弹窗管理 首先维护了一个弹窗队列，保存了首屏会出现的所有弹窗，数组的每一项是一个对象保存了弹窗组件，弹窗展示条件，弹窗关闭回调，然后根据用户状态， filter 需要展示的弹窗队列，在首页递归展示。</p><p>场景数据 MOCK 由于我们的接口数据 mock 是单个接口拦截处理的，接口是没有副作用的， 接口与接口之间是不相关的，所以涉及到接口有副作用，接口与接口之间相互影响的时候 就无法 mock 了。所以就弄了一个场景值 mock 函数，主要原理就是一开始在各个接口内调用函数注册场景值，然后这里面有一个接口是驱动者， 这个接口的调用次数来驱动场景值往下一个场景值切换。给场景值定义一个唯一标识为 key，当前场景为值绑定到 global 上，这样这个场景值可以在多个接口之间共享。</p><p>script 加载 js 走服务器响应的缓存策略。 fetch 加载 js 如果请求 header 有缓存策略会影响到响应的缓存策略。 但请求头的设置确实可以影响缓存的使用方式和策略。如果请求头设置了 Cache-Control: no-cache，即使响应头指示资源可以被缓存，客户端也可能会选择不直接使用缓存的响应，而是向服务器发送请求进行验证 ‌</p><p>内存泄漏分析</p><h3 id="jscodeshift"><a class="header-anchor" href="#jscodeshift">#</a> jscodeshift</h3><h3 id="polyfill-service"><a class="header-anchor" href="#polyfill-service">#</a> polyfill-service</h3><h3 id="简历知识点汇总"><a class="header-anchor" href="#简历知识点汇总">#</a> 简历知识点汇总</h3><p>1、vue ssr 改造 2、内存泄露问题排查流程 3、站点 SEO 流程 （‌https://search.google.com/search-console/） 4、大文件分片上传、断点续传 5、六方格、大圈盘活动页开发要点 6、webpack5、新特性 7、webpack 优化 8、eslint stylelint 自定义规则编写 9、PAP 项目理解</p><h3 id="常见性能指标获取"><a class="header-anchor" href="#常见性能指标获取">#</a> 常见性能指标获取</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> t <span class="token operator">=</span> performance<span class="token punctuation">.</span>timing<span class="token punctuation">;</span>\n    <span class="token comment">// DNS查询耗时</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;DNS耗时:&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>domainLookupEnd <span class="token operator">-</span> t<span class="token punctuation">.</span>domainLookupStart<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// TCP连接耗时</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;TCP耗时:&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>connectEnd <span class="token operator">-</span> t<span class="token punctuation">.</span>connectStart<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 白屏时间（首字节到达前）</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;白屏时间:&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>responseStart <span class="token operator">-</span> t<span class="token punctuation">.</span>navigationStart<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// DOM解析完成时间</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;页面总加载时间:&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>domInteractive <span class="token operator">-</span> t<span class="token punctuation">.</span>navigationStart<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 页面完全加载时间</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;页面总加载时间:&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>loadEventEnd <span class="token operator">-</span> t<span class="token punctuation">.</span>navigationStart<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>',21),p={render:function(n,s){return t}}}}]);